{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:08:55"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 14:08:55"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:09:02"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:09:30"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 14:09:30"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:10:19"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:13:36"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 14:13:36"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:15:41"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 14:15:41"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:15:41"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:44:53"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 14:44:53"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:45:26"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 14:45:26"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:45:49"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 14:45:49"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 14:57:57"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 14:57:57"}
{"level":"error","message":"[400] \"fullName\" is required, \"email\" is required, \"password\" is required, \"confirmPassword\" is required, \"mobileNumber\" is required, \"dateOfBirth\" is required, \"gender\" is required","timestamp":"2025-05-19 15:01:46"}
{"level":"info","message":"::1 - - [19/May/2025:09:31:46 +0000] \"POST /api/auth/register HTTP/1.1\" 400 219 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:01:46"}
{"level":"error","message":"[400] \"password\" length must be at least 8 characters long, \"password\" with value \"duredev\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/","timestamp":"2025-05-19 15:05:24"}
{"level":"info","message":"::1 - - [19/May/2025:09:35:24 +0000] \"POST /api/auth/register HTTP/1.1\" 400 231 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:05:24"}
{"level":"error","message":"[400] \"password\" with value \"duredev1\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/","timestamp":"2025-05-19 15:05:45"}
{"level":"info","message":"::1 - - [19/May/2025:09:35:45 +0000] \"POST /api/auth/register HTTP/1.1\" 400 176 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:05:45"}
{"level":"error","message":"Error sending email: Email template 'welcome' not found","stack":"Error: Email template 'welcome' not found\n    at sendEmail (/home/harry/Documents/eyeWear/src/utils/email.ts:75:13)\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:72:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","timestamp":"2025-05-19 15:06:11"}
{"isOperational":true,"level":"error","message":"Unexpected error: Failed to register user","stack":"Error: Failed to register user\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:82:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","status":"error","statusCode":500,"timestamp":"2025-05-19 15:06:11"}
{"level":"info","message":"::1 - - [19/May/2025:09:36:11 +0000] \"POST /api/auth/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:06:11"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:06:38"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:06:38"}
{"isOperational":true,"level":"error","message":"Unexpected error: Email already in use","stack":"Error: Email already in use\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:54:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","status":"fail","statusCode":400,"timestamp":"2025-05-19 15:06:46"}
{"level":"info","message":"::1 - - [19/May/2025:09:36:46 +0000] \"POST /api/auth/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:06:46"}
{"isOperational":true,"level":"error","message":"Unexpected error: Failed to register user","stack":"Error: Failed to register user\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:82:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","status":"error","statusCode":500,"timestamp":"2025-05-19 15:09:26"}
{"level":"info","message":"::1 - - [19/May/2025:09:39:26 +0000] \"POST /api/auth/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:09:26"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:11:49"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:11:49"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:12:15"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:12:15"}
{"isOperational":true,"level":"error","message":"Unexpected error: Failed to register user","stack":"Error: Failed to register user\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:83:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","status":"error","statusCode":500,"timestamp":"2025-05-19 15:12:28"}
{"level":"info","message":"::1 - - [19/May/2025:09:42:28 +0000] \"POST /api/auth/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:12:28"}
{"level":"error","message":"Error sending email: Email template 'welcome' not found","stack":"Error: Email template 'welcome' not found\n    at sendEmail (/home/harry/Documents/eyeWear/src/utils/email.ts:75:13)\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:72:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","timestamp":"2025-05-19 15:13:01"}
{"isOperational":true,"level":"error","message":"Unexpected error: Failed to register user","stack":"Error: Failed to register user\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:83:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","status":"error","statusCode":500,"timestamp":"2025-05-19 15:13:01"}
{"level":"info","message":"::1 - - [19/May/2025:09:43:01 +0000] \"POST /api/auth/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:13:01"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:13:45"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:13:45"}
{"level":"error","message":"Error sending email: Email template 'welcome' not found","stack":"Error: Email template 'welcome' not found\n    at sendEmail (/home/harry/Documents/eyeWear/src/utils/email.ts:75:13)\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:72:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","timestamp":"2025-05-19 15:14:06"}
{"isOperational":true,"level":"error","message":"Unexpected error: Failed to register user","stack":"Error: Failed to register user\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:83:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","status":"error","statusCode":500,"timestamp":"2025-05-19 15:14:06"}
{"level":"info","message":"::1 - - [19/May/2025:09:44:06 +0000] \"POST /api/auth/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 15:14:06"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:15:18"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:15:18"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:16:15"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:16:16"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:17:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:17:13"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:20:52"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:20:52"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:21:50"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:21:50"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:22:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:22:13"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:25:12"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:25:12"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 15:42:50"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 15:42:50"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:01:11"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:01:11"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:01:36"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:01:36"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:03:50"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:03:50"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:04:05"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:04:05"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:05:17"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:05:17"}
{"level":"info","message":"Email sent to duredev23@mailinator.com","timestamp":"2025-05-19 16:06:00"}
{"level":"info","message":"::1 - - [19/May/2025:10:36:00 +0000] \"POST /api/auth/register HTTP/1.1\" 201 515 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:06:00"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:10:55"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:10:55"}
{"isOperational":true,"level":"error","message":"Unexpected error: Email already in use","stack":"Error: Email already in use\n    at AuthService.register (/home/harry/Documents/eyeWear/src/services/auth.service.ts:54:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.register (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:23:22)","status":"fail","statusCode":400,"timestamp":"2025-05-19 16:10:56"}
{"level":"info","message":"::1 - - [19/May/2025:10:40:56 +0000] \"POST /api/auth/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:10:56"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:20:06"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:20:06"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:20:49"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:20:49"}
{"level":"info","message":"Email sent to duredev23@mailinator.com","timestamp":"2025-05-19 16:23:35"}
{"level":"info","message":"::1 - - [19/May/2025:10:53:35 +0000] \"POST /api/auth/register HTTP/1.1\" 201 515 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:23:35"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:27:02"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:27:02"}
{"level":"info","message":"Email sent to duredev23@mailinator.com","timestamp":"2025-05-19 16:27:48"}
{"level":"info","message":"::1 - - [19/May/2025:10:57:48 +0000] \"POST /api/auth/register HTTP/1.1\" 201 664 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:27:48"}
{"isOperational":true,"level":"error","message":"Unexpected error: Failed to login","stack":"Error: Failed to login\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:110:13)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"error","statusCode":500,"timestamp":"2025-05-19 16:32:00"}
{"level":"info","message":"::1 - - [19/May/2025:11:02:00 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:32:00"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:32:23"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:32:23"}
{"isOperational":true,"level":"error","message":"Unexpected error: Failed to login","stack":"Error: Failed to login\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:110:13)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"error","statusCode":500,"timestamp":"2025-05-19 16:32:45"}
{"level":"info","message":"::1 - - [19/May/2025:11:02:45 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:32:45"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:36:22"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:36:23"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:36:44"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:36:44"}
{"isOperational":true,"level":"error","message":"Unexpected error: Invalid email or password","stack":"Error: Invalid email or password\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:98:15)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"fail","statusCode":401,"timestamp":"2025-05-19 16:37:01"}
{"level":"info","message":"::1 - - [19/May/2025:11:07:01 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:37:01"}
{"isOperational":true,"level":"error","message":"Unexpected error: Invalid email or password","stack":"Error: Invalid email or password\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:98:15)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"fail","statusCode":401,"timestamp":"2025-05-19 16:37:36"}
{"level":"info","message":"::1 - - [19/May/2025:11:07:36 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:37:36"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:39:13"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:39:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:39:29"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:39:29"}
{"isOperational":true,"level":"error","message":"Unexpected error: Invalid email or password","stack":"Error: Invalid email or password\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:105:15)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"fail","statusCode":401,"timestamp":"2025-05-19 16:39:38"}
{"level":"info","message":"::1 - - [19/May/2025:11:09:38 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:39:38"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:41:08"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:41:08"}
{"isOperational":true,"level":"error","message":"Unexpected error: Invalid email or password","stack":"Error: Invalid email or password\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:105:15)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"fail","statusCode":401,"timestamp":"2025-05-19 16:41:55"}
{"level":"info","message":"::1 - - [19/May/2025:11:11:55 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:41:55"}
{"isOperational":true,"level":"error","message":"Unexpected error: Invalid email or password","stack":"Error: Invalid email or password\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:105:15)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"fail","statusCode":401,"timestamp":"2025-05-19 16:43:02"}
{"level":"info","message":"::1 - - [19/May/2025:11:13:02 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:43:02"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:45:48"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:45:48"}
{"isOperational":true,"level":"error","message":"Unexpected error: Invalid email or password","stack":"Error: Invalid email or password\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:96:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"fail","statusCode":401,"timestamp":"2025-05-19 16:46:05"}
{"level":"info","message":"::1 - - [19/May/2025:11:16:05 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:46:05"}
{"level":"info","message":"Email sent to duredev23@mailinator.com","timestamp":"2025-05-19 16:46:34"}
{"level":"info","message":"::1 - - [19/May/2025:11:16:34 +0000] \"POST /api/auth/register HTTP/1.1\" 201 664 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:46:34"}
{"level":"info","message":"::1 - - [19/May/2025:11:16:50 +0000] \"POST /api/auth/login HTTP/1.1\" 200 664 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:46:50"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:51:35"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:51:35"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-19 16:51:44"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-19 16:51:44"}
{"isOperational":true,"level":"error","message":"Unexpected error: Please verify your email before logging in","stack":"Error: Please verify your email before logging in\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:97:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"fail","statusCode":403,"timestamp":"2025-05-19 16:52:18"}
{"level":"info","message":"::1 - - [19/May/2025:11:22:18 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:52:18"}
{"level":"info","message":"::1 - - [19/May/2025:11:23:13 +0000] \"POST /api/auth/login HTTP/1.1\" 200 663 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-19 16:53:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 11:00:02"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 11:00:02"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 11:07:44"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 11:07:44"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 11:32:55"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 11:32:55"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 11:42:20"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 11:42:20"}
{"level":"info","message":"Email sent to duredev23@mailinator.com","timestamp":"2025-05-20 11:49:07"}
{"level":"info","message":"::1 - - [20/May/2025:06:19:07 +0000] \"POST /api/auth//forgot-password HTTP/1.1\" 200 60 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 11:49:07"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 12:07:25"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 12:07:25"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 12:21:43"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 12:21:43"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 12:22:05"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 12:22:05"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 12:29:20"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 12:29:21"}
{"level":"error","message":"Error sending email: Email template 'adminEmailVerification' not found","stack":"Error: Email template 'adminEmailVerification' not found\n    at sendEmail (/home/harry/Documents/eyeWear/src/utils/email.ts:98:13)\n    at AdminService.register (/home/harry/Documents/eyeWear/src/services/admin.service.ts:67:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /home/harry/Documents/eyeWear/src/controllers/admin.controller.ts:13:19","timestamp":"2025-05-20 12:34:56"}
{"isOperational":true,"level":"error","message":"Unexpected error: Failed to register admin","stack":"Error: Failed to register admin\n    at AdminService.register (/home/harry/Documents/eyeWear/src/services/admin.service.ts:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /home/harry/Documents/eyeWear/src/controllers/admin.controller.ts:13:19","status":"error","statusCode":500,"timestamp":"2025-05-20 12:34:56"}
{"level":"info","message":"::1 - - [20/May/2025:07:04:56 +0000] \"POST /api/admin/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 12:34:56"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 12:36:21"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 12:36:21"}
{"isOperational":true,"level":"error","message":"Unexpected error: Email already in use","stack":"Error: Email already in use\n    at AdminService.register (/home/harry/Documents/eyeWear/src/services/admin.service.ts:49:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /home/harry/Documents/eyeWear/src/controllers/admin.controller.ts:13:19","status":"fail","statusCode":400,"timestamp":"2025-05-20 12:40:02"}
{"level":"info","message":"::1 - - [20/May/2025:07:10:02 +0000] \"POST /api/admin/register HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 12:40:02"}
{"level":"info","message":"Email sent to dureadmin3@mailinator.com","timestamp":"2025-05-20 12:40:28"}
{"level":"info","message":"::1 - - [20/May/2025:07:10:28 +0000] \"POST /api/admin/register HTTP/1.1\" 201 449 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 12:40:28"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 12:42:59"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 12:42:59"}
{"level":"info","message":"Email sent to dureadmin3@mailinator.com","timestamp":"2025-05-20 12:43:48"}
{"level":"info","message":"::1 - - [20/May/2025:07:13:48 +0000] \"POST /api/admin/register HTTP/1.1\" 201 449 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 12:43:48"}
{"isOperational":true,"level":"error","message":"Unexpected error: Invalid email or password","stack":"Error: Invalid email or password\n    at AdminService.login (/home/harry/Documents/eyeWear/src/services/admin.service.ts:86:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /home/harry/Documents/eyeWear/src/controllers/admin.controller.ts:21:19","status":"fail","statusCode":401,"timestamp":"2025-05-20 12:47:19"}
{"level":"info","message":"::1 - - [20/May/2025:07:17:19 +0000] \"POST /api/admin/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 12:47:19"}
{"level":"info","message":"::1 - - [20/May/2025:07:19:08 +0000] \"POST /api/admin/login HTTP/1.1\" 200 448 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 12:49:08"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:02:52"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:02:53"}
{"level":"error","message":"[404] User not found","timestamp":"2025-05-20 13:03:23"}
{"level":"info","message":"::1 - - [20/May/2025:07:33:23 +0000] \"POST /api/admin/ HTTP/1.1\" 404 44 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:03:23"}
{"level":"error","message":"[404] User not found","timestamp":"2025-05-20 13:05:02"}
{"level":"info","message":"::1 - - [20/May/2025:07:35:02 +0000] \"POST /api/products/ HTTP/1.1\" 404 44 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:05:02"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:09:43"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:09:43"}
{"level":"error","message":"[404] User not found","timestamp":"2025-05-20 13:11:59"}
{"level":"info","message":"::1 - - [20/May/2025:07:41:59 +0000] \"POST /api/products/ HTTP/1.1\" 404 44 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:11:59"}
{"level":"error","message":"[404] User not found","timestamp":"2025-05-20 13:12:24"}
{"level":"info","message":"::1 - - [20/May/2025:07:42:24 +0000] \"POST /api/products HTTP/1.1\" 404 44 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:12:24"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:13:01"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:13:01"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:15:20"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:15:20"}
{"level":"error","message":"[404] User not found","timestamp":"2025-05-20 13:17:30"}
{"level":"info","message":"::1 - - [20/May/2025:07:47:30 +0000] \"GET /api/admin/verify-token HTTP/1.1\" 404 44 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:17:30"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:39:09"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:39:09"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:39:40"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:39:40"}
{"level":"info","message":"User authenticated","role":"admin","timestamp":"2025-05-20 13:40:02","userId":"682c2ba72aeda3087a1cb885"}
{"level":"info","message":"::1 - - [20/May/2025:08:10:02 +0000] \"GET /api/admin/verify-token HTTP/1.1\" 200 236 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:40:02"}
{"level":"info","message":"User authenticated","role":"admin","timestamp":"2025-05-20 13:40:15","userId":"682c2ba72aeda3087a1cb885"}
{"level":"info","message":"User authorized","requiredRoles":["admin"],"role":"admin","timestamp":"2025-05-20 13:40:15","userId":"682c2ba72aeda3087a1cb885"}
{"body":{"brand":"Ray-Ban","bridgeWidth":18,"category":"60c72b2f9b1e8b002a5e56b1","description":"Stylish and durable sunglasses with UV protection, perfect for sunny days.","features":["UV Protection","Scratch Resistant","Lightweight Frame"],"frameColor":"Black","frameMaterial":"Metal","gender":"men","images":["https://example.com/images/product1.jpg","https://example.com/images/product2.jpg"],"isActive":true,"lensColor":"Green","lensType":"Polarized","lensWidth":55,"name":"Aviator Sunglasses","offerPrice":99,"price":120,"specifications":{"dimensions":"55-18-140","material":"Metal Alloy","warranty":"1 year manufacturer warranty","weight":25},"stock":50,"subCategory":"60c72b3c9b1e8b002a5e56b2","templeLength":140,"type":"sunglasses"},"level":"info","message":"Creating new product","timestamp":"2025-05-20 13:40:15"}
{"error":{"_message":"Product validation failed","errors":{"frameHeight":{"kind":"required","message":"Frame height is required","name":"ValidatorError","path":"frameHeight","properties":{"message":"Frame height is required","path":"frameHeight","type":"required"}},"frameWidth":{"kind":"required","message":"Frame width is required","name":"ValidatorError","path":"frameWidth","properties":{"message":"Frame width is required","path":"frameWidth","type":"required"}}},"message":"Product validation failed: frameHeight: Frame height is required, frameWidth: Frame width is required","name":"ValidationError"},"level":"error","message":"Error creating product","timestamp":"2025-05-20 13:40:15"}
{"_message":"Product validation failed","errors":{"frameHeight":{"kind":"required","message":"Frame height is required","name":"ValidatorError","path":"frameHeight","properties":{"message":"Frame height is required","path":"frameHeight","type":"required"}},"frameWidth":{"kind":"required","message":"Frame width is required","name":"ValidatorError","path":"frameWidth","properties":{"message":"Frame width is required","path":"frameWidth","type":"required"}}},"level":"error","message":"Unexpected error: Product validation failed: frameHeight: Frame height is required, frameWidth: Frame width is required","stack":"ValidationError: Product validation failed: frameHeight: Frame height is required, frameWidth: Frame width is required\n    at model.Document.invalidate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/document.js:3219:32)\n    at /home/harry/Documents/eyeWear/node_modules/mongoose/lib/document.js:3012:17\n    at /home/harry/Documents/eyeWear/node_modules/mongoose/lib/schematype.js:1368:9\n    at processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-05-20 13:40:15"}
{"level":"info","message":"::1 - - [20/May/2025:08:10:15 +0000] \"POST /api/products HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:40:15"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:49:46"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:49:46"}
{"level":"info","message":"User authenticated","role":"admin","timestamp":"2025-05-20 13:50:20","userId":"682c2ba72aeda3087a1cb885"}
{"level":"info","message":"User authorized","requiredRoles":["admin"],"role":"admin","timestamp":"2025-05-20 13:50:20","userId":"682c2ba72aeda3087a1cb885"}
{"body":{"brand":"Ray-Ban","bridgeWidth":18,"category":"60c72b2f9b1e8b002a5e56b1","description":"Stylish and durable sunglasses with UV protection, perfect for sunny days.","features":["UV Protection","Scratch Resistant","Lightweight Frame"],"frameColor":"Black","frameMaterial":"Metal","gender":"men","images":["https://example.com/images/product1.jpg","https://example.com/images/product2.jpg"],"isActive":true,"lensColor":"Green","lensType":"Polarized","lensWidth":55,"name":"Aviator Sunglasses","offerPrice":99,"price":120,"specifications":{"dimensions":"55-18-140","material":"Metal Alloy","warranty":"1 year manufacturer warranty","weight":25},"stock":50,"subCategory":"60c72b3c9b1e8b002a5e56b2","templeLength":140,"type":"sunglasses"},"level":"info","message":"Creating new product","timestamp":"2025-05-20 13:50:20"}
{"level":"info","message":"Product created successfully","productId":"682c3b44de15d003b83bfc32","timestamp":"2025-05-20 13:50:20"}
{"level":"info","message":"::1 - - [20/May/2025:08:20:20 +0000] \"POST /api/products HTTP/1.1\" 201 816 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:50:20"}
{"level":"info","message":"Fetching products with filters","query":{},"timestamp":"2025-05-20 13:55:35"}
{"error":{},"level":"error","message":"Error fetching products","timestamp":"2025-05-20 13:55:35"}
{"level":"error","message":"Unexpected error: Schema hasn't been registered for model \"Category\".\nUse mongoose.model(name, schema)","stack":"MissingSchemaError: Schema hasn't been registered for model \"Category\".\nUse mongoose.model(name, schema)\n    at NativeConnection.Connection.model (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/connection.js:1136:13)\n    at _getModelFromConn (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:585:15)\n    at addModelNamesToMap (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:512:17)\n    at getModelsMapForPopulate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:201:7)\n    at populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4394:21)\n    at _populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4354:5)\n    at /home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4325:10)\n    at model.Query._find (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/query.js:2320:20)","timestamp":"2025-05-20 13:55:35"}
{"level":"info","message":"::1 - - [20/May/2025:08:25:35 +0000] \"GET /api/products HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:55:35"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:56:03"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:56:03"}
{"level":"info","message":"Fetching products with filters","query":{},"timestamp":"2025-05-20 13:56:09"}
{"error":{},"level":"error","message":"Error fetching products","timestamp":"2025-05-20 13:56:09"}
{"level":"error","message":"Unexpected error: Schema hasn't been registered for model \"Category\".\nUse mongoose.model(name, schema)","stack":"MissingSchemaError: Schema hasn't been registered for model \"Category\".\nUse mongoose.model(name, schema)\n    at NativeConnection.Connection.model (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/connection.js:1136:13)\n    at _getModelFromConn (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:585:15)\n    at addModelNamesToMap (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:512:17)\n    at getModelsMapForPopulate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:201:7)\n    at populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4394:21)\n    at _populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4354:5)\n    at /home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4325:10)\n    at model.Query._find (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/query.js:2320:20)","timestamp":"2025-05-20 13:56:09"}
{"level":"info","message":"::1 - - [20/May/2025:08:26:09 +0000] \"GET /api/products HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 13:56:09"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 13:59:49"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 13:59:49"}
{"level":"info","message":"Fetching products with filters","query":{},"timestamp":"2025-05-20 14:00:02"}
{"error":{},"level":"error","message":"Error fetching products","timestamp":"2025-05-20 14:00:02"}
{"level":"error","message":"Unexpected error: Schema hasn't been registered for model \"Category\".\nUse mongoose.model(name, schema)","stack":"MissingSchemaError: Schema hasn't been registered for model \"Category\".\nUse mongoose.model(name, schema)\n    at NativeConnection.Connection.model (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/connection.js:1136:13)\n    at _getModelFromConn (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:585:15)\n    at addModelNamesToMap (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:512:17)\n    at getModelsMapForPopulate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:201:7)\n    at populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4394:21)\n    at _populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4354:5)\n    at /home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4325:10)\n    at model.Query._find (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/query.js:2320:20)","timestamp":"2025-05-20 14:00:02"}
{"level":"info","message":"::1 - - [20/May/2025:08:30:02 +0000] \"GET /api/products HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 14:00:02"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 14:00:40"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 14:00:40"}
{"level":"info","message":"Fetching products with filters","query":{},"timestamp":"2025-05-20 14:00:45"}
{"error":{},"level":"error","message":"Error fetching products","timestamp":"2025-05-20 14:00:45"}
{"level":"error","message":"Unexpected error: Schema hasn't been registered for model \"Category\".\nUse mongoose.model(name, schema)","stack":"MissingSchemaError: Schema hasn't been registered for model \"Category\".\nUse mongoose.model(name, schema)\n    at NativeConnection.Connection.model (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/connection.js:1136:13)\n    at _getModelFromConn (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:585:15)\n    at addModelNamesToMap (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:512:17)\n    at getModelsMapForPopulate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:201:7)\n    at populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4394:21)\n    at _populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4354:5)\n    at /home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/model.js:4325:10)\n    at model.Query._find (/home/harry/Documents/eyeWear/node_modules/mongoose/lib/query.js:2320:20)","timestamp":"2025-05-20 14:00:45"}
{"level":"info","message":"::1 - - [20/May/2025:08:30:45 +0000] \"GET /api/products HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 14:00:45"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 14:01:55"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 14:01:55"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 14:02:33"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 14:02:33"}
{"level":"info","message":"Fetching products with filters","query":{},"timestamp":"2025-05-20 14:02:39"}
{"level":"info","message":"::1 - - [20/May/2025:08:32:39 +0000] \"GET /api/products HTTP/1.1\" 200 820 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 14:02:39"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 15:24:04"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 15:24:04"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 15:25:45"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 15:25:45"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 15:32:30"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 15:32:30"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 15:36:23"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 15:36:23"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 15:37:31"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 15:37:31"}
{"level":"info","message":"Email sent to duredev23@mailinator.com","timestamp":"2025-05-20 15:39:51"}
{"level":"info","message":"::1 - - [20/May/2025:10:09:51 +0000] \"POST /api/auth/register HTTP/1.1\" 201 664 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:39:51"}
{"isOperational":true,"level":"error","message":"Unexpected error: Please verify your email before logging in","stack":"Error: Please verify your email before logging in\n    at AuthService.login (/home/harry/Documents/eyeWear/src/services/auth.service.ts:97:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.login (/home/harry/Documents/eyeWear/src/controllers/auth.controller.ts:33:22)","status":"fail","statusCode":403,"timestamp":"2025-05-20 15:40:09"}
{"level":"info","message":"::1 - - [20/May/2025:10:10:09 +0000] \"POST /api/auth/login HTTP/1.1\" 500 51 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:40:09"}
{"level":"info","message":"::1 - - [20/May/2025:10:12:16 +0000] \"POST /api/auth/login HTTP/1.1\" 200 663 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:42:16"}
{"level":"info","message":"Email sent to dureadmin3@mailinator.com","timestamp":"2025-05-20 15:44:57"}
{"level":"info","message":"::1 - - [20/May/2025:10:14:57 +0000] \"POST /api/admin/register HTTP/1.1\" 201 449 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:44:57"}
{"level":"info","message":"::1 - - [20/May/2025:10:20:11 +0000] \"POST /api/admin/login HTTP/1.1\" 200 448 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:50:11"}
{"level":"info","message":"User authenticated","role":"admin","timestamp":"2025-05-20 15:52:23","userId":"682c561cdc9157d5b2af9d2c"}
{"level":"info","message":"::1 - - [20/May/2025:10:22:23 +0000] \"GET /api/admin/verify-token HTTP/1.1\" 200 236 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:52:23"}
{"level":"error","message":"[404] User not found","timestamp":"2025-05-20 15:52:50"}
{"level":"info","message":"::1 - - [20/May/2025:10:22:50 +0000] \"POST /api/products HTTP/1.1\" 404 44 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:52:50"}
{"level":"info","message":"User authenticated","role":"admin","timestamp":"2025-05-20 15:53:07","userId":"682c561cdc9157d5b2af9d2c"}
{"level":"info","message":"User authorized","requiredRoles":["admin"],"role":"admin","timestamp":"2025-05-20 15:53:07","userId":"682c561cdc9157d5b2af9d2c"}
{"body":{"brand":"Ray-Ban","bridgeWidth":18,"category":"60c72b2f9b1e8b002a5e56b1","description":"Stylish and durable sunglasses with UV protection, perfect for sunny days.","features":["UV Protection","Scratch Resistant","Lightweight Frame"],"frameColor":"Black","frameMaterial":"Metal","gender":"men","images":["https://example.com/images/product1.jpg","https://example.com/images/product2.jpg"],"isActive":true,"lensColor":"Green","lensType":"Polarized","lensWidth":55,"name":"Aviator Sunglasses","offerPrice":99,"price":120,"specifications":{"dimensions":"55-18-140","material":"Metal Alloy","warranty":"1 year manufacturer warranty","weight":25},"stock":50,"subCategory":"60c72b3c9b1e8b002a5e56b2","templeLength":140,"type":"sunglasses"},"level":"info","message":"Creating new product","timestamp":"2025-05-20 15:53:07"}
{"body":{"brand":"Ray-Ban","bridgeWidth":18,"category":"60c72b2f9b1e8b002a5e56b1","description":"Stylish and durable sunglasses with UV protection, perfect for sunny days.","features":["UV Protection","Scratch Resistant","Lightweight Frame"],"frameColor":"Black","frameMaterial":"Metal","gender":"men","images":["https://example.com/images/product1.jpg","https://example.com/images/product2.jpg"],"isActive":true,"lensColor":"Green","lensType":"Polarized","lensWidth":55,"name":"Aviator Sunglasses","offerPrice":99,"price":120,"specifications":{"dimensions":"55-18-140","material":"Metal Alloy","warranty":"1 year manufacturer warranty","weight":25},"stock":50,"subCategory":"60c72b3c9b1e8b002a5e56b2","templeLength":140,"type":"sunglasses"},"level":"info","message":"Creating new product","timestamp":"2025-05-20 15:53:07"}
{"level":"info","message":"Product created successfully","productId":"682c580bdc9157d5b2af9d38","timestamp":"2025-05-20 15:53:07"}
{"level":"info","message":"Product created successfully","productId":"682c580bdc9157d5b2af9d38","timestamp":"2025-05-20 15:53:07"}
{"level":"info","message":"::1 - - [20/May/2025:10:23:07 +0000] \"POST /api/products HTTP/1.1\" 201 816 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:53:07"}
{"level":"info","message":"Fetching products with filters","query":{},"timestamp":"2025-05-20 15:53:44"}
{"level":"info","message":"Fetching products with filters","query":{},"timestamp":"2025-05-20 15:53:44"}
{"level":"info","message":"::1 - - [20/May/2025:10:23:44 +0000] \"GET /api/products HTTP/1.1\" 200 820 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 15:53:44"}
{"level":"info","message":"::1 - - [20/May/2025:10:50:56 +0000] \"POST /api/cart HTTP/1.1\" 404 148 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:20:56"}
{"level":"info","message":"::1 - - [20/May/2025:10:51:23 +0000] \"POST /api/cart/ HTTP/1.1\" 404 149 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:21:23"}
{"level":"info","message":"::1 - - [20/May/2025:10:53:41 +0000] \"POST /api/cart HTTP/1.1\" 404 148 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:23:41"}
{"level":"info","message":"::1 - - [20/May/2025:10:53:47 +0000] \"POST /api/cart/ HTTP/1.1\" 404 149 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:23:47"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 16:28:30"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 16:28:31"}
{"level":"info","message":"::1 - - [20/May/2025:11:00:34 +0000] \"POST /api/cart/ HTTP/1.1\" 404 149 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:30:34"}
{"level":"info","message":"::1 - - [20/May/2025:11:00:48 +0000] \"POST /api/cart/ HTTP/1.1\" 404 149 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:30:48"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 16:32:12"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 16:32:12"}
{"level":"info","message":"::1 - - [20/May/2025:11:02:25 +0000] \"POST /api/cart/ HTTP/1.1\" 404 149 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:32:25"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 16:36:46"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 16:36:46"}
{"level":"info","message":"::1 - - [20/May/2025:11:06:51 +0000] \"POST /api/cart/ HTTP/1.1\" 404 149 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:36:51"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 16:37:51"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 16:37:51"}
{"level":"info","message":"::1 - - [20/May/2025:11:07:52 +0000] \"POST /api/cart/add HTTP/1.1\" 404 152 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:37:52"}
{"level":"info","message":"::1 - - [20/May/2025:11:09:10 +0000] \"POST /api/cart/add HTTP/1.1\" 404 152 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:39:10"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 16:44:02"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 16:44:02"}
{"level":"info","message":"::1 - - [20/May/2025:11:16:19 +0000] \"POST /api/cart/add HTTP/1.1\" 404 152 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 16:46:19"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 17:07:14"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 17:07:14"}
{"level":"info","message":"::1 - - [20/May/2025:12:18:56 +0000] \"POST /api/v1/cart/add HTTP/1.1\" 404 155 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 17:48:56"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 17:49:26"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 17:49:26"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 17:49:56"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 17:49:56"}
{"level":"info","message":"::1 - - [20/May/2025:12:20:29 +0000] \"POST /api/v1/cart/add HTTP/1.1\" 404 155 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 17:50:29"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 17:51:39"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 17:51:39"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 17:53:10"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 17:53:10"}
{"level":"info","message":"::1 - - [20/May/2025:12:23:22 +0000] \"POST /api/v1/cart/add HTTP/1.1\" 404 155 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 17:53:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-05-20 18:11:25"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2025-05-20 18:11:25"}
{"level":"info","message":"User authenticated","role":"user","timestamp":"2025-05-20 18:11:46","userId":"682c54ebdc9157d5b2af9d20"}
{"level":"info","message":"Creating new cart","timestamp":"2025-05-20 18:11:46","userId":"682c54ebdc9157d5b2af9d20"}
{"cartId":"682c788a8f60f8f0098c0325","level":"info","message":"Cart created successfully","timestamp":"2025-05-20 18:11:46"}
{"level":"info","message":"::1 - - [20/May/2025:12:41:46 +0000] \"POST /api/v1/cart/add HTTP/1.1\" 200 392 \"-\" \"PostmanRuntime/7.44.0\"","timestamp":"2025-05-20 18:11:46"}
